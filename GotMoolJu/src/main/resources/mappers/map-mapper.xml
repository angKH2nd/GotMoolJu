<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapMapper">

	<resultMap type="MapVO" id="mapResult">
		<result column="apt_no" property="aptNo"/>
		<result column="apt_room_type" property="aptRoomType"/>
		<result column="apt_selling_type" property="aptSellingType"/>
		<result column="apt_location_x" property="aptLocationX"/>
		<result column="apt_location_y" property="aptLocationY"/>
		<result column="apt_name" property="aptName"/>
		<result column="apt_introduce" property="aptIntroduce"/>
		<result column="apt_price" property="aptPrice"/>
		<result column="apt_img_url" property="aptImgUrl"/>
		<result column="apt_img_urls" property="aptImgUrls"/>
		<result column="apt_img_urls1" property="aptImgUrls1"/>
		<result column="apt_img_urls2" property="aptImgUrls2"/>
		<result column="apt_img_urls3" property="aptImgUrls3"/>
		<result column="apt_img_urls4" property="aptImgUrls4"/>
		<result column="apt_img_urls5" property="aptImgUrls5"/>
		<result column="apt_desc" property="aptDesc"/>
		<result column="apt_desc1" property="aptDesc1"/>
		<result column="apt_desc2" property="aptDesc2"/>
		<result column="apt_desc3" property="aptDesc3"/>
		<result column="apt_count" property="aptCount"/>
		<result column="apt_create_date" property="aptCreateDate"/>
		<result column="apt_status" property="aptStatus"/>
		<result column="apt_memo" property="aptMemo"/>
		<result column="apt_room_size" property="aptRoomSize"/>
		<result column="apt_provision_size" property="aptProvisionSize"/>
		<result column="apt_address" property="aptAddress"/>
		<result column="apt_dong" property="aptDong"/>
		<result column="apt_ho" property="aptHo"/>
		<result column="apt_tags" property="aptTags"/>
		<result column="apt_tags1" property="aptTags1"/>
		<result column="apt_tags2" property="aptTags2"/>
		<result column="apt_tags3" property="aptTags3"/>
		<result column="apt_beds" property="aptBeds"/>
		<result column="apt_bath" property="aptBath"/>
		<result column="apt_entrance_type" property="aptEntranceType"/>
		<result column="dibs_apt_no" property="dibsAptNo"/>
	</resultMap>
	<!--  
	<select id="selectAllList" resultMap="mapResult"> 
	select 
		   APT_NO
		 , APT_LOCATION
	  from tb_apt
	 where rownum between 1 and 200
	 </select>
	 -->

	<select id="countJachi" resultType="string">
		select count(*)
		  from tb_apt
		 where apt_address like '%'||#{jachi}||'%'
	</select>
	
	<select id="detailAptCount" resultMap="mapResult">
		SELECT 
		       APT_NAME,
		       COUNT(APT_NAME) AS apt_count,
		       SUBSTR(APT_LOCATION, 1, INSTR(APT_LOCATION, ',') - 1) AS apt_location_y,
		       SUBSTR(APT_LOCATION, INSTR(APT_LOCATION, ',') + 1) AS apt_location_x
		  FROM 
		       TB_APT
		 WHERE 
		       SUBSTR(APT_LOCATION, 1, INSTR(APT_LOCATION, ',') - 1) BETWEEN #{minX} AND #{maxX}
		       AND SUBSTR(APT_LOCATION, INSTR(APT_LOCATION, ',') + 1) BETWEEN #{minY} AND #{maxY}
		 GROUP 
		    BY 
		       APT_NAME,
		       SUBSTR(APT_LOCATION, 1, INSTR(APT_LOCATION, ',') - 1),
		       SUBSTR(APT_LOCATION, INSTR(APT_LOCATION, ',') + 1)
	</select>
	
	<select id="detailApt" resultMap="mapResult">
		select 
	           APT_NO
	         , APT_SELLING_TYPE
	         , APT_NAME        
	         , APT_PRICE
	         , APT_IMG_URL
	         , APT_DESC
	         , APT_ADDRESS
	      from tb_apt
	    where apt_name = #{aptName}	
	      and SUBSTR(APT_LOCATION, INSTR(APT_LOCATION, ',') + 1) = #{aptLocation}
	</select>
	
	<select id="countDong" resultType="string">
		select count(*)
		  from tb_apt
		 where apt_address like '%'||#{dong}||'%'
	</select>
	
	<select id="selectAptDetail" resultMap="mapResult">
		select
			   apt_no
			 , apt_selling_type
			 , apt_location
			 , apt_name
			 , apt_introduce
			 , apt_price
			 , apt_img_url
			 , apt_img_urls
			 , REGEXP_SUBSTR(apt_img_urls, '[^,]+', 1, 1) AS apt_img_urls1
			 , REGEXP_SUBSTR(apt_img_urls, '[^,]+', 1, 2) AS apt_img_urls2
			 , REGEXP_SUBSTR(apt_img_urls, '[^,]+', 1, 3) AS apt_img_urls3
			 , REGEXP_SUBSTR(apt_img_urls, '[^,]+', 1, 4) AS apt_img_urls4
			 , REGEXP_SUBSTR(apt_img_urls, '[^,]+', 1, 5) AS apt_img_urls5
			 , REGEXP_SUBSTR(apt_desc, '[^,]+', 1, 1) AS apt_desc1
			 , REGEXP_SUBSTR(apt_desc, '[^,]+', 1, 2) AS apt_desc2
			 , REGEXP_SUBSTR(apt_desc, '[^,]+', 1, 3) AS apt_desc3
			 , apt_desc
			 , apt_review
			 , apt_count
			 , apt_create_date
			 , apt_status
			 , apt_memo
			 , apt_room_size
			 , apt_provision_size
			 , apt_address
			 , apt_dong
			 , apt_ho
			 , apt_tags
			 , REGEXP_SUBSTR(apt_tags, '[^,]+', 1, 1) AS apt_tags1
			 , REGEXP_SUBSTR(apt_tags, '[^,]+', 1, 2) AS apt_tags2
			 , REGEXP_SUBSTR(apt_tags, '[^,]+', 1, 3) AS apt_tags3
			 , apt_beds
			 , apt_bath
			 , apt_entrance_type
		  from tb_apt
		 where apt_no = #{aptNo}
	</select>
	
	<select id="selectAptCount" resultType="_int">
		select count(*)
  		  from tb_apt
	</select>
	
	<select id="selectTopAptList" resultMap="mapResult">
		select *
		  from (SELECT apt_name, TO_NUMBER(SUBSTR(apt_price, 1, INSTR(apt_price, '억') - 1)) as "apt_price"
				FROM tb_apt
				WHERE INSTR(apt_price, '억') > 0 AND
					  SUBSTR(apt_price, 1, INSTR(apt_price, '억') - 1) IS NOT NULL
					  and APT_SELLING_TYPE = '매매'
					  order by "apt_price" desc)
		  where rownum between 1 and 6
	</select>

	<select id="selectTopPrice" resultMap="mapResult">
		SELECT *
		  FROM (SELECT APT_ADDRESS, ROUND(AVG(TO_NUMBER(SUBSTR(apt_price, 1, INSTR(apt_price, '억') - 1))), 1) AS "APT_PRICE"
		        FROM TB_APT
		        WHERE APT_SELLING_TYPE = '매매'
		        GROUP BY APT_ADDRESS
		        ORDER BY "APT_PRICE" DESC)
		 WHERE "APT_PRICE" IS NOT NULL
		   AND ROWNUM BETWEEN 1 AND 10
	</select>
	
	<select id="selectAdminAptList" resultMap="mapResult">
		select 
		       apt_no
		     , apt_img_url
		     , apt_name
		     , apt_desc
		     , apt_selling_type
		     , apt_price
		     , apt_introduce
		  from tb_apt
		 where apt_status is null 
		 order
		    by apt_no desc
	</select>
	
	<update id="deleteAdminApt">
		update tb_apt
		   set apt_status = 'N'
		 where apt_no = #{aptNo}
	</update>
	
	
	
	<select id="selectDibsList" resultMap="mapResult">
		select 
	           DIBS_APT_NO 
	         , APT_SELLING_TYPE
	         , APT_NAME        
	         , APT_PRICE
	         , APT_IMG_URL
	         , APT_DESC
	      from tb_apt
	      join tb_dibs on (APT_NO = DIBS_APT_NO)
	    where dibs_user_no = #{userNo}
	</select>
	
</mapper>